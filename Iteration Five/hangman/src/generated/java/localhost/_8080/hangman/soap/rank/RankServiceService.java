package localhost._8080.hangman.soap.rank;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.4.0
 * 2020-08-27T19:24:16.551+03:00
 * Generated source version: 3.4.0
 *
 */
@WebServiceClient(name = "RankServiceService",
                  wsdlLocation = "file:/D:/Programming/Java%20Proxiad/Iteration%20Four/hangman/target/generated/wsdl/RankService.wsdl",
                  targetNamespace = "http://localhost:8080/hangman/soap/rank")
public class RankServiceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://localhost:8080/hangman/soap/rank", "RankServiceService");
    public final static QName RankServicePort = new QName("http://localhost:8080/hangman/soap/rank", "RankServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/Programming/Java%20Proxiad/Iteration%20Four/hangman/target/generated/wsdl/RankService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(RankServiceService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/D:/Programming/Java%20Proxiad/Iteration%20Four/hangman/target/generated/wsdl/RankService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public RankServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RankServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RankServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public RankServiceService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public RankServiceService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public RankServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns RankService
     */
    @WebEndpoint(name = "RankServicePort")
    public RankService getRankServicePort() {
        return super.getPort(RankServicePort, RankService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RankService
     */
    @WebEndpoint(name = "RankServicePort")
    public RankService getRankServicePort(WebServiceFeature... features) {
        return super.getPort(RankServicePort, RankService.class, features);
    }

}
